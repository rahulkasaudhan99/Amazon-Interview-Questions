//Approach: there are total n! permutations for length=n
//Time : n*n!   //print n! string of len n                  Space: O(r-l)
//Note: This solution prints duplicate permutations if there are repeating characters in the input string.
//In Method 2 we will handle Duplicates

Method 1:
#include <bits/stdc++.h>
using namespace std;

void permute(string s,int l,int r){
    //base case
    if(l==r) cout<<s<<endl;
    //recursive case
    for(int i=l;i<=r;i++){
        swap(s[l],s[i]);
        permute(s,l+1,r);
        //backtrack
        swap(s[l],s[i]);
    }
    return;
}

int main() {
	string s;
	cin>>s;
	int n=s.length();
	permute(s,0,n-1);
	return 0;
}


input:
abc
output:
abc
acb
bac
bca
cba
cab



Method 2:
