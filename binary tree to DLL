#include <bits/stdc++.h>
using namespace std;

class node{
    int data;
    public:
    node* left;
    node* right;
    node(){
        this->data=0;
        this->left=NULL;
        this->right=NULL;
    }
    node(int d){
        this->data=d;
        this->left=NULL;
        this->right=NULL;
    }
    void binaryTreeToDLL(node *root,node **head){
        if(!root) return;
        static node* prev=NULL;
        binaryTreeToDLL(root->left,head);
        if(!prev) *head=root;
        else{
            prev->right=root;
            root->left=prev;
        }
        prev=root;
        binaryTreeToDLL(root->right,head);
    }
    void printDLL(node *head){
        while(head){
            cout<<head->data<<" -> ";
            head=head->right;
        }
        cout<<endl;
    }
};



int main() {
    node tree;
    node* root=NULL;
    root=new node(10);
    root->left=new node(12);
    root->right=new node(15);
    root->left->left=new node(25);
    root->left->right=new node(30);
    root->right->left=new node(36);
    node *head=NULL;
    tree.binaryTreeToDLL(root,&head);
    tree.printDLL(head);
	return 0;
}


output:
25 -> 12 -> 30 -> 10 -> 36 -> 15 -> 
